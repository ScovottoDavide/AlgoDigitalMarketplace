{
    "hints": {
        "createApplication(asset,uint64)void": {
            "call_config": {
                "no_op": "CREATE"
            }
        },
        "setPrice(uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "optInToAsset(pay)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "buy(pay,uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "deleteApplication()void": {
            "call_config": {
                "delete_application": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCgpzbWFydF9jb250cmFjdHMuYWxnb19kaWdpdGFsX21hcmtldHBsYWNlLmNvbnRyYWN0LkFsZ29EaWdpdGFsTWFya2V0cGxhY2UuY2xlYXJfc3RhdGVfcHJvZ3JhbToKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9hbGdvX2RpZ2l0YWxfbWFya2V0cGxhY2UvY29udHJhY3QucHk6NAogICAgLy8gY2xhc3MgQWxnb0RpZ2l0YWxNYXJrZXRwbGFjZShBUkM0Q29udHJhY3QpOgogICAgaW50IDEKICAgIHJldHVybgo="
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 2
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "assetId": {
                    "type": "uint64",
                    "key": "assetId"
                },
                "unitaryPrice": {
                    "type": "uint64",
                    "key": "unitaryPrice"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "AlgoDigitalMarketplace",
        "methods": [
            {
                "name": "createApplication",
                "args": [
                    {
                        "type": "asset",
                        "name": "assetId"
                    },
                    {
                        "type": "uint64",
                        "name": "unitaryPrice"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "setPrice",
                "args": [
                    {
                        "type": "uint64",
                        "name": "unitaryPrice"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "optInToAsset",
                "args": [
                    {
                        "type": "pay",
                        "name": "mbrPay"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "buy",
                "args": [
                    {
                        "type": "pay",
                        "name": "buyerTxn"
                    },
                    {
                        "type": "uint64",
                        "name": "quantity"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "deleteApplication",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {}
}